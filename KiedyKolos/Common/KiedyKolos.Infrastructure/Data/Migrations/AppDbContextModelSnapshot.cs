// <auto-generated />
using System;
using KiedyKolos.Infrastructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KiedyKolos.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("KiedyKolos.Core.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("EventTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("YearCourseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventTypeId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("YearCourseId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("KiedyKolos.Core.Models.EventType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("EventTypes");
                });

            modelBuilder.Entity("KiedyKolos.Core.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("GroupNumber")
                        .HasColumnType("int");

                    b.Property<int>("YearCourseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("YearCourseId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("KiedyKolos.Core.Models.GroupEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("GroupId");

                    b.ToTable("GroupEvents");
                });

            modelBuilder.Entity("KiedyKolos.Core.Models.Key", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("Value")
                        .IsUnique();

                    b.ToTable("Keys");
                });

            modelBuilder.Entity("KiedyKolos.Core.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40) CHARACTER SET utf8mb4");

                    b.Property<string>("ShortName")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4");

                    b.Property<int>("YearCourseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("YearCourseId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("KiedyKolos.Core.Models.YearCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Course")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40) CHARACTER SET utf8mb4");

                    b.Property<int>("CourseStartYear")
                        .HasColumnType("int");

                    b.Property<int>("CurrentSemester")
                        .HasColumnType("int");

                    b.Property<string>("Faculty")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60) CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("University")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("YearCourses");
                });

            modelBuilder.Entity("KiedyKolos.Core.Models.Event", b =>
                {
                    b.HasOne("KiedyKolos.Core.Models.EventType", "EventType")
                        .WithMany("Events")
                        .HasForeignKey("EventTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KiedyKolos.Core.Models.Subject", "Subject")
                        .WithMany("Events")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KiedyKolos.Core.Models.YearCourse", "YearCourse")
                        .WithMany("Events")
                        .HasForeignKey("YearCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EventType");

                    b.Navigation("Subject");

                    b.Navigation("YearCourse");
                });

            modelBuilder.Entity("KiedyKolos.Core.Models.Group", b =>
                {
                    b.HasOne("KiedyKolos.Core.Models.YearCourse", "YearCourse")
                        .WithMany("Groups")
                        .HasForeignKey("YearCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("YearCourse");
                });

            modelBuilder.Entity("KiedyKolos.Core.Models.GroupEvent", b =>
                {
                    b.HasOne("KiedyKolos.Core.Models.Event", "Event")
                        .WithMany("GroupEvents")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KiedyKolos.Core.Models.Group", "Group")
                        .WithMany("GroupEvents")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("KiedyKolos.Core.Models.Subject", b =>
                {
                    b.HasOne("KiedyKolos.Core.Models.YearCourse", "YearCourse")
                        .WithMany("Subjects")
                        .HasForeignKey("YearCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("YearCourse");
                });

            modelBuilder.Entity("KiedyKolos.Core.Models.Event", b =>
                {
                    b.Navigation("GroupEvents");
                });

            modelBuilder.Entity("KiedyKolos.Core.Models.EventType", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("KiedyKolos.Core.Models.Group", b =>
                {
                    b.Navigation("GroupEvents");
                });

            modelBuilder.Entity("KiedyKolos.Core.Models.Subject", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("KiedyKolos.Core.Models.YearCourse", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Groups");

                    b.Navigation("Subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
